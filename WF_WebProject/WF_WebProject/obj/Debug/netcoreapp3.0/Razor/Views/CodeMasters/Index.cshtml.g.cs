#pragma checksum "C:\Users\FS\source\repos\WF_WebProject\WF_WebProject\Views\CodeMasters\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "09b1f78e4fa37796cd87fa3e504758edbe3018ac"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CodeMasters_Index), @"mvc.1.0.view", @"/Views/CodeMasters/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\FS\source\repos\WF_WebProject\WF_WebProject\Views\_ViewImports.cshtml"
using WFWebProject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\FS\source\repos\WF_WebProject\WF_WebProject\Views\_ViewImports.cshtml"
using WFWebProject.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"09b1f78e4fa37796cd87fa3e504758edbe3018ac", @"/Views/CodeMasters/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8b095058779a1d989e07011361c5cf65da51af88", @"/Views/_ViewImports.cshtml")]
    public class Views_CodeMasters_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<style>
    table.dataTable {
        border-collapse: collapse !important;
    }
</style>
<div class=""page-content-body"">

    <section class=""content"">
        <div class=""row"">
            <div class=""col-12"">

                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">测试数据</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <table id=""example1"" class=""table table-bordered table-striped nowrap dtr-inline collapsed"">
                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </section>
    
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    
    <script>
        function filterColumn(i) {
            $('#example1').DataTable().column(i).search(
                $('#col' + i + '_filter').val(),
                false,
                false
            ).draw();
        }
        var editor, table, isdisposed;
        var curWarehouseId, curType, curStorerId; // use a global for the submit and return data rendering in the examples
        $(document).ready(function () {
            isdisposed = false;
            App.initResizeHandler();
            Layout.initAjaxContentSuccessCallback();
            App.addResizeHandler(Resize);
            Layout.addAjaxContentSuccessCallback(AjaxDispose);
            
            //查询
            table = $('#example1').DataTable({
                ""paging"": true,
                ""lengthChange"": true,
                ""searching"": true,
                ""ordering"": true,
                ""info"": true,
                ""autoWidth"": false,
                ""select"": true,
                ");
                WriteLiteral("\"scrollX\": true,\r\n                lengthMenu: [[10, 25, 50, 100, 500], [10, 25, 50, 100, 500]],\r\n                ajax: {\r\n                    url: \"");
#nullable restore
#line 64 "C:\Users\FS\source\repos\WF_WebProject\WF_WebProject\Views\CodeMasters\Index.cshtml"
                     Write(Url.Action("PageData", "CodeMasters"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    type: ""post""
                },
                order: [[0, 'asc']],//一定要添加
                colReorder: {
                    fixedColumnsLeft: 1
                },
                columns: [
                    { data: ""id"", title: ""主键"", searchable: true, orderable: true, width: ""50px"",visible:false, responsivePriority: 1 },
                    { data: ""codeId"", title: ""参数ID"", searchable: true, orderable: false, width: ""100px"", responsivePriority: 1 },
                    { data: ""codeName"", title: ""参数名称"", searchable: true, orderable: true, width: ""100px"", responsivePriority: 1 },
                    { data: ""codeGroup"", title: ""参数类型"", searchable: true, orderable: true, width: ""100px"", responsivePriority: 1 },
                    { data: ""creator"", title: ""创建人"", searchable: false, orderable: true, width: ""100px"", responsivePriority: 1 },
                    {
                        data: ""createTime"", title: ""创建时间"", searchable: true, orderable: true, width: ""100px"", resp");
                WriteLiteral(@"onsivePriority: 1,
                        render: function (val, type, row) {
                            val = moment(val).format('YYYY-MM-DD hh:mm:ss');
                            return val;
                        }
                    },
                    { data: ""modifier"", title: ""修改人"", searchable: false, orderable: true, width: ""100px"", responsivePriority: 1 },
                    {
                        data: ""modifyTime"", title: ""修改时间"", searchable: true, orderable: true, width: ""100px"", responsivePriority: 1,
                        render: function (val, type, row) {
                            val = val==""""||val==null?"""":moment(val).format('YYYY-MM-DD hh:mm:ss');
                            return val;
                        }
                    },
                    {
                        data: ""isActive"", title: ""状态"", searchable: true, orderable: true, width: ""100px"", responsivePriority: 1,
                        render: function (val, type, row) {
                 ");
                WriteLiteral(@"           val = val == ""1"" ? ""启用"" : ""禁用"";
                            return val;
                        }
                    },
                    { data: ""remarks"", title: ""备注"", searchable: false, orderable: true, width: ""100px"", responsivePriority: 1 },
                    { data: ""hudF_01"", title: ""自定义字段"", searchable: false, orderable: true, width: ""100px"", responsivePriority: 1 },
                    { data: ""hudF_01"", title: ""自定义字段"", searchable: false, orderable: true, width: ""100px"", responsivePriority: 1 },
                    { data: ""hudF_01"", title: ""自定义字段"", searchable: false, orderable: true, width: ""100px"", responsivePriority: 1 },
                ],
                buttons: [
                        { extend: ""create"", text: ""创建"", editor: editor },
                        { extend: ""edit"", text: ""编辑"", editor: editor },
                        { extend: ""selectedSingle"", text: ""启用\\停用"", action: function (e, dt, node, config) {  var rows = table.rows({ selected: true }).data(); Cod");
                WriteLiteral(@"emasterOnOff(rows[0]['Id']); }},
                        {
                            extend: 'collection',
                            text: '导出',
                            buttons: [
                                { extend: ""copyHtml5"", text: ""复制"" },
                                { extend: ""excelHtml5"", text: ""导出EXCEL"" }
                                //{ extend: ""csvHtml5"", text: ""导出CSV"" },
                                //{ extend: ""pdfHtml5"", text: ""导出PDF"" }
                            ]
                        }
                ],

            });
        });
        //调整窗口大小
        function Resize() {
            $('#example1').DataTable()
                .columns.adjust()
                .responsive.recalc();
        }
        //页面数据注销
        function AjaxDispose() {
            if (!isdisposed) {
                isdisposed = true;
                
                try {
                         table.destroy();
                 
                }
               ");
                WriteLiteral(" catch\r\n                {\r\n                    console.log(\"释放失败\");\r\n                }\r\n            }\r\n        }\r\n\r\n    </script>\r\n");
            }
            );
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
