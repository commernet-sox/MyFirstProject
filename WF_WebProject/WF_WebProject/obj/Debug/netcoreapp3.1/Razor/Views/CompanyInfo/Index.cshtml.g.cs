#pragma checksum "C:\Users\FS\source\repos\WF_WebProject\WF_WebProject\Views\CompanyInfo\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "89fa84d5024ea3a4839f2b99b80f5c603498645b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CompanyInfo_Index), @"mvc.1.0.view", @"/Views/CompanyInfo/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\FS\source\repos\WF_WebProject\WF_WebProject\Views\_ViewImports.cshtml"
using WFWebProject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\FS\source\repos\WF_WebProject\WF_WebProject\Views\_ViewImports.cshtml"
using WFWebProject.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"89fa84d5024ea3a4839f2b99b80f5c603498645b", @"/Views/CompanyInfo/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8b095058779a1d989e07011361c5cf65da51af88", @"/Views/_ViewImports.cshtml")]
    public class Views_CompanyInfo_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"

<div class=""page-content-body"">

    <section class=""content"">
        <div class=""row"">
            <div class=""col-12"">

                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">企业基本信息</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <table id=""example1"" class=""table table-bordered table-striped"">
                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </section>

</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script src=""../../plugins/datatables/jquery.dataTables.min.js""></script>
    <script>
        function filterColumn(i) {
            $('#example1').DataTable().column(i).search(
                $('#col' + i + '_filter').val(),
                false,
                false
            ).draw();
        }
        var editor, table, isdisposed;
        var curWarehouseId, curType, curStorerId; // use a global for the submit and return data rendering in the examples
        $(document).ready(function () {
            isdisposed = false;
            App.initResizeHandler();
            Layout.initAjaxContentSuccessCallback();
            App.addResizeHandler(Resize);
            Layout.addAjaxContentSuccessCallback(AjaxDispose);
            //时间插件配置
            if (jQuery().datepicker) {
                $('#col3_filter').datepicker({
                    language: 'zh-CN',
                    autoclose: true,
                    todayHighlight: true,
                    format: 'yyyy-mm");
                WriteLiteral(@"-dd',
                    clearBtn: true
                });
                $('.date-picker').datepicker({
                    rtl: App.isRTL(),
                    orientation: ""left"",
                    autoclose: true,
                    todayHighlight: true,
                    language: 'zh-CN',
                    clearBtn: true,
                });
                ////$('body').removeClass(""modal-open""); // fix bug when inline picker is used in modal
            }
            //新增和编辑
");
                WriteLiteral(@"            //查询
            table = $('#example1').DataTable({
                //""paging"": true,
                //""lengthChange"": false,
                //""searching"": false,
                //""ordering"": true,
                //""info"": true,
                //""autoWidth"": false,
                lengthMenu: [[10, 25, 50, 100, 500], [10, 25, 50, 100, 500]],
                ajax: {
                    url: """);
#nullable restore
#line 108 "C:\Users\FS\source\repos\WF_WebProject\WF_WebProject\Views\CompanyInfo\Index.cshtml"
                     Write(Url.Action("PageData", "CompanyInfo"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    type: ""post""
                },
                order: [[0, 'asc']],//一定要添加
                colReorder: {
                    fixedColumnsLeft: 1
                },
                columns: [
                    { data: ""id"", title: ""主键"", searchable: true, orderable: true, width: ""50px"",visible:false, responsivePriority: 1 },
                    { data: ""name"", title: ""公司名称"", searchable: true, orderable: false, width: ""100px"", responsivePriority: 1 },
                    { data: ""industry"", title: ""行业"", searchable: true, orderable: true, width: ""100px"", responsivePriority: 1 },
                    { data: ""legalPerson"", title: ""法定代表人"", searchable: true, orderable: true, width: ""100px"", responsivePriority: 1 },
                    { data: ""createDate"", title: ""成立日期"", searchable: false, orderable: true, width: ""100px"", responsivePriority: 1 },
                    { data: ""tel"", title: ""联系电话"", searchable: false, orderable: true, width: ""100px"", responsivePriority: 1 },

    ");
                WriteLiteral(@"            ],
                buttons: [
                        { extend: ""create"", text: ""创建"", editor: editor },
                        { extend: ""edit"", text: ""编辑"", editor: editor },
                        { extend: ""selectedSingle"", text: ""启用\\停用"", action: function (e, dt, node, config) {  var rows = table.rows({ selected: true }).data(); CodemasterOnOff(rows[0]['Id']); }},
                        {
                            extend: 'collection',
                            text: '导出',
                            buttons: [
                                { extend: ""copyHtml5"", text: ""复制"" },
                                { extend: ""excelHtml5"", text: ""导出EXCEL"" }
                                //{ extend: ""csvHtml5"", text: ""导出CSV"" },
                                //{ extend: ""pdfHtml5"", text: ""导出PDF"" }
                            ]
                        }
                ],

            });

            //新增初始化
            //editor.on('initCreate', function () {
           ");
                WriteLiteral(@" //    editor.show(); //Shows all fields
            //    //editor.field('WorkCenter').hide();
            //    editor.field('CodeId').enable();
            //    editor.field('CodeName').enable();
            //    editor.field('CodeGroup').enable();
            //    editor.field('IsActive').disable();
            //    editor.field('Remarks').enable();
            //    editor.field('HUDF_01').enable();
            //});
            //编辑初始化
            //editor.on('initEdit', function () {
            //    editor.show(); //Shows all fields
            //    //editor.field('WorkCenter').hide();
            //    editor.field('CodeId').disable();
            //    editor.field('CodeName').enable();
            //    editor.field('CodeGroup').enable();
            //    editor.field('IsActive').enable();
            //    editor.field('Remarks').enable();
            //    editor.field('HUDF_01').enable();

            //});
            //新增提交验证
            //editor.on('preSubmit', fu");
                WriteLiteral(@"nction (e, o, action) {
            //    if (action !== 'remove') {
            //        var allFlag = true;
            //        var flag = true;
            //        if (editor.field('CodeGroup').val().trim()== """") {

            //            editor.field('CodeGroup').error(""参数类型不能为空"");
            //            flag = false;
            //            allFlag = false;
            //        }
            //        if (editor.field('CodeGroup').val().trim().length >20) {
            //            editor.field('CodeGroup').error(""参数类型长度不能大于20"");
            //            flag = false;
            //            allFlag = false;
            //        }
            //        if (editor.field('CodeId').val().trim()=="""") {
            //            editor.field('CodeId').error(""参数ID不能为空"");
            //            flag = false;
            //            allFlag = false;
            //        }
            //        if (editor.field('CodeId').val().trim().length >20) {
            //      ");
                WriteLiteral(@"      editor.field('CodeId').error(""参数ID长度不能大于20"");
            //            flag = false;
            //            allFlag = false;
            //        }
            //        if (!allFlag) {
            //            return false;
            //        }
            //    }
            //});
            //$('#myTable')
            //    .on('error.dt', function (e, settings, techNote, message) {
            //        if (e.type = 'error') {
            //            toastr.error(settings.jqXHR.responseText, """", { target: '.page-content-body' });
            //        }
            //    });
            //查询事件
            $('#Search').click(function () {
                var items = $(this).parents('.booking-search').find('.fiter');
                $.each(items, function (index, obj) {
                    var i = $(obj).attr('data-column');
                    var name = $(obj).attr('data-name') + '';
                    var val = $('#col' + i + '_filter').val();
                    ");
                WriteLiteral(@"if (val === null)
                        val = '';
                    var index = $('#myTable').DataTable().columns().dataSrc().indexOf(name)
                    var selectot = '.search-' + index;
                    if ($(selectot).length === 0) {
                        $('#myTable').DataTable().column(index).search(val, false, false);
                    }
                    else {
                        $('#myTable').DataTable().column($(selectot)).search(val, false, false);
                    }
                });

                $('#myTable').DataTable().columns().search().draw();
            });
            //获取下拉信息
");
                WriteLiteral(@"            //editor.on('close', function () {

            //});
        });
        //调整窗口大小
        function Resize() {
            $('#myTable').DataTable()
                .columns.adjust()
                .responsive.recalc();
        }
        //页面数据注销
        function AjaxDispose() {
            if (!isdisposed) {
                isdisposed = true;
                //editor.field('Type').input().off('change');
                //editor.field('CodeGroup').input().off('change');
                //editor.field('CodeName').input().off('change');
                //editor.field('CreateTime').input().off('change');
                try {
                            table.destroy();if (editor.s.template) {editor.s.template=null;}editor.destroy();
                    //editor.destroy();
                }
                catch
                {
                    console.log(""释放失败"");
                }
            }
        }
        $('#Search').click();
        //启用/停用事件
        fun");
                WriteLiteral("ction CodemasterOnOff(Id)\r\n        {\r\n            $.ajax({\r\n                    url: \"");
#nullable restore
#line 321 "C:\Users\FS\source\repos\WF_WebProject\WF_WebProject\Views\CompanyInfo\Index.cshtml"
                     Write(Url.Action("OnOff", "WareHouseBasic"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",    //请求的url地址
                    dataType: ""json"",   //返回格式为json
                    async: true,//请求是否异步，默认为异步，这也是ajax重要特性
                    data: { ""Id"": Id },   //参数值,键值对
                    type: ""GET"",   //请求方式
                    beforeSend: function () {
                        //请求前的处理
                    },
                    success: function (req) {
                        //请求成功时处理
                        if (req.Result)
                        {
                            toastr.success(req.Message);
                        }
                        else
                        {
                            toastr.error(req.Message);
                        }
                    },
                    complete: function () {
                        //请求完成的处理
                        $('#Search').click();
                    },
                    error: function (res) {
                        //请求出错处理
                    }
                });
        }
        ");
                WriteLiteral("//判断空格\r\n        function validate(num) {\r\n            return /^\\s+$/.test(num);\r\n        }\r\n    </script>\r\n");
            }
            );
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
