{{!<Layout}}
{{ViewBag Title='定时任务'}}
{{ViewBag ShowFooter=true}}

<div class="ui inverted page dimmer" id="dimmer"><div class="ui loader"></div></div>

{{#with Model}}
<div id="scheduler-dashboard">
    <div id="msg-panel"></div>

    <h3 class="ui dividing header" style="margin-top: 0px">概况</h3>

    <div class="ui inverted statistic" style="background-color: #0c5a0c; background-image: linear-gradient(#107c10, #0c5a0c);">
        <div class="value"><i class="small check icon"></i> {{ExecutedJobs}}</div>
        <div class="label">总执行次数</div>
    </div>

    <div class="ui inverted statistic" style="background-color: #c42121; background-image: linear-gradient(#db2828, #c42121);">
        <div class="value"><i class="small close icon"></i> {{FailedJobs}}</div>
        <div class="label">失败次数</div>
    </div>

    <div class="ui inverted statistic" style="background-color: #1c70b0; background-image: linear-gradient(#2185d0, #1c70b0);">
        <div class="value"><i class="small play icon"></i> {{ExecutingJobs}}</div>
        <div class="label">正在执行中</div>
    </div>

    <div class="ui statistic" style="background-color: #f0f0f0;">
        <div class="value">
            <div style="height: 50px" class="dashboard-histogram">{{>Histogram History}}</div>
        </div>
        <div class="label">历史记录</div>
    </div>

    <div class="ui statistic" style="box-shadow: none">
        <div class="inline-stats">
            <span>{{JobsCount}}</span> 作业数<br>
            <span>{{TriggerCount}}</span> 触发器
        </div>
    </div>



    <div class="ui stackable grid">
        <div class="seven wide column" style="padding-right: 14px !important">
            <h3 class="ui dividing header">状态</h3>
            <table class="ui table">
                <tbody>
                    <tr>
                        <td style="min-width: 220px">待机</td>
                        <td>{{Upper MetaData.InStandbyMode}}</td>
                    </tr>
                    <tr>
                        <td>第一次执行时间</td>
                        <td>{{RunningSince}}</td>
                    </tr>
                    <tr>
                        <td>是否关闭</td>
                        <td>{{Upper MetaData.Shutdown}}</td>
                    </tr>
                    <tr>
                        <td>是否运行</td>
                        <td>{{Upper MetaData.Started}}</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="nine wide column" id="col-actions">
            <h3 class="ui dividing header">动作</h3>

            <p style="margin-top: 1em">
                {{#if MetaData.InStandbyMode}}
                <button class="ui small button green" id="btn-start"><i class="play icon"></i>启动</button>
                {{else}}
                <button class="ui small button grey" id="btn-standby"><i class="stop icon"></i>停止</button>
                {{/if}}
                <button class="ui small button red" id="btn-shutdown"><i class="power icon"></i>关闭</button>
                <button class="ui small button" id="btn-pause"><i class="pause icon"></i>暂停</button>
                <button class="ui small button" id="btn-resume"><i class="play icon"></i>恢复</button>
            </p>

            {{>GroupActions items=JobGroups id='job-groups' header='Job Groups'}}
            {{>GroupActions items=TriggerGroups id='trigger-groups' header='Trigger Groups'}}

        </div>
    </div>

    <h3 class="ui dividing header">节点信息</h3>
    <table class="ui table">
        <tbody>
            <tr>
                <td style="min-width: 220px">主机</td>
                <td>{{MachineName}}</td>
            </tr>
            <tr>
                <td>应用</td>
                <td>{{Application}}</td>
            </tr>
            <tr>
                <td>任务名称</td>
                <td>{{MetaData.SchedulerName}}</td>
            </tr>
            <tr>
                <td>任务ID</td>
                <td>{{MetaData.SchedulerInstanceId}}</td>
            </tr>
            <tr>
                <td>开启远程</td>
                <td>{{Upper MetaData.SchedulerRemote}}</td>
            </tr>
            <tr>
                <td>任务类型</td>
                <td>{{MetaData.SchedulerType.AssemblyQualifiedName}}</td>
            </tr>
            <tr>
                <td>版本</td>
                <td>{{MetaData.Version}}</td>
            </tr>
        </tbody>
    </table>

    <h3 class="ui dividing header">作业存储</h3>
    <table class="ui table">
        <tbody>
            <tr>
                <td style="min-width: 220px">集群</td>
                <td>{{Upper MetaData.JobStoreClustered}}</td>
            </tr>
            <tr>
                <td>支持持久化</td>
                <td>{{Upper MetaData.JobStoreSupportsPersistence}}</td>
            </tr>
            <tr>
                <td>类型</td>
                <td>{{MetaData.JobStoreType.AssemblyQualifiedName}}</td>
            </tr>
        </tbody>
    </table>

    <h3 class="ui dividing header">线程池</h3>
    <table class="ui table">
        <tbody>
            <tr>
                <td style="min-width: 220px">大小</td>
                <td>{{MetaData.ThreadPoolSize}}</td>
            </tr>
            <tr>
                <td>类型</td>
                <td>{{MetaData.ThreadPoolType.AssemblyQualifiedName}}</td>
            </tr>
        </tbody>
    </table>

</div>

<div class="ui mini modal" id="shutdown-dialog">
    <div class="content">
        <p>确定关闭当前定时任务?</p>
        <p>此操作<b>不可逆</b> 这意味着您将无法再连接到此页！</p>
    </div>
    <div class="actions">
        <div class="ui approve red button">关闭</div>
        <div class="ui cancel button">取消</div>
    </div>
</div>

{{/with}}

<script>
    initHistogramTooltips($('.histogram > .bar'));
    initDimmer();

    function doAction(content) {
        $('#dimmer').dimmer('show');

        $.ajax({
            type: 'POST', url: '{{ActionUrl "Action"}}',
            data: JSON.stringify(content),
            contentType: 'application/json', cache: false,
            success: function () {
                document.location = '{{ActionUrl ""}}';
            },
            error: function (e) {
                $('#dimmer').dimmer('hide');
                prependErrorMessage(e, $('#msg-panel'));
            }
        });
    }

    function confirmDialog(dlg, action) {
        dlg.modal({ duration: 250, onApprove: function () { doAction({ action: action }); } })
        .modal('show');
    }

    // event handlers
    $('#btn-shutdown').click(function () { confirmDialog($('#shutdown-dialog'), 'shutdown'); });
    $('#btn-pause').click(function () { doAction({ action: 'pause' }); });
    $('#btn-resume').click(function () { doAction({ action: 'resume' }); });
    $('#btn-standby').click(function () { doAction({ action: 'standby' }); });
    $('#btn-start').click(function () { doAction({ action: 'start' }); });

    $(document).on('click', '#job-groups.group-actions button, #trigger-groups.group-actions button', function () {
        doAction({ action: $(this).data('action'), name: $(this).data('name'), groups: $(this).closest('.group-actions').attr('id') });
    });

</script>
